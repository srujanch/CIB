<?xml version="1.0" encoding="UTF-8"?>
<taglib version="2.0" xmlns="http://java.sun.com/xml/ns/j2ee"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee web-jsptaglibrary_2_0.xsd">
    <description>SBSA YP Templating Tag Library</description>
    <display-name>SBSA YP Templating Tag Library</display-name>
    <tlib-version>1.0</tlib-version>
    <jspversion>2.0</jspversion>
    <short-name>sbg-templating</short-name>
    <uri>http://www.standardbank.co.za/tags/templating</uri>
  
    <tag>
        <description>Allows additional information to be added to the
            page/request context via a custom controller</description>
        <name>initContentRegion</name>
        <tag-class>za.co.standardbank.sbg.cda.templating.taglib.InitContentRegionTag
        </tag-class>
        <body-content>empty</body-content>
        <attribute>
            <name>controller</name>
            <required>false</required>
            <rtexprvalue>false</rtexprvalue>
        </attribute>
    </tag>
    <tag>
        <description>Transforms ETL Links in the ETL content(content from EditLive! for Java CCE widget) and place the transformed content in request scope</description>
        <name>TranslateETLContent</name>
        <tag-class>za.co.standardbank.sbg.cda.templating.taglib.TranslateETLContent</tag-class>
        <body-content>empty</body-content>
	<attribute>
		<description>
			Value of the the ETL content to be translated..
			The type of the scoped variable is String..
		</description>
		<name>etlContent</name>
		<required>true</required>
		<rtexprvalue>true</rtexprvalue>
		<type>java.lang.String</type>
	</attribute>
	<attribute>
		<description>
			Name of the exported scoped variable for the Transformed Content. 
			The type of the scoped variable is String.
			If it is not given, then the  translated content will will be printed on jsp.
		</description>
		<name>var</name>
		<required>false</required>
		<rtexprvalue>true</rtexprvalue>
		<type>java.lang.String</type>
	</attribute>
    </tag>
    <tag>
        <description>It gives Country Label based on Key. For example for BW it gives Botswana</description>
        <name>getCountryLabel</name>
        <tag-class>za.co.standardbank.sbg.cda.templating.taglib.SBGCountryLabel</tag-class>
        <body-content>empty</body-content>
    <attribute>
        <name>var</name>
        <required>true</required>
        <rtexprvalue>true</rtexprvalue>
        <type>java.lang.String</type>
    </attribute>
    <attribute>
        <name>countryKey</name>
        <required>true</required>
        <rtexprvalue>true</rtexprvalue>
        <type>java.lang.String</type>
    </attribute>
    </tag>
    <tag>
        <description>It gives Accolade Publication Years in asc or desc order with given separator. Ex. 2004, 2005, 2006</description>
        <name>getAccoladePublicationYears</name>
        <tag-class>za.co.standardbank.sbg.cda.templating.taglib.AccoladePublicationYear</tag-class>
        <body-content>empty</body-content>
    <attribute>
        <name>var</name>
        <required>true</required>
        <rtexprvalue>true</rtexprvalue>
        <type>java.lang.String</type>
    </attribute>
    <attribute>
        <name>oid</name>
        <required>true</required>
        <rtexprvalue>true</rtexprvalue>
        <type>java.lang.String</type>
    </attribute>
    <attribute>
        <name>separator</name>
        <required>false</required>
        <rtexprvalue>true</rtexprvalue>
        <type>java.lang.String</type>
    </attribute>
    <attribute>
        <name>order</name>
        <required>false</required>
        <rtexprvalue>true</rtexprvalue>
        <type>java.lang.String</type>
    </attribute>
    </tag>
    <tag>
        <description>This class is used to get results for smart list query based on pagination index.
        This tag library will be used only if pagination exists on SmartList configured page.</description>
        <name>getSmartListPaginationResults</name>
        <tag-class>za.co.standardbank.sbg.cda.templating.taglib.SmartListResultsTag</tag-class>
        <body-content>empty</body-content>
    <attribute>
        <name>var</name>
        <required>false</required>
        <rtexprvalue>true</rtexprvalue>
        <type>java.util.List</type>
    </attribute>
    <attribute>
        <name>resultsPerPage</name>
        <required>true</required>
        <rtexprvalue>true</rtexprvalue>
        <type>java.lang.Integer</type>
    </attribute>
    </tag>
    <tag>
        <description>This class is for DealsSearch</description>
        <name>getDealsSearch</name>
        <tag-class>za.co.standardbank.sbg.cda.templating.taglib.DealsSearchTag</tag-class>
        <body-content>empty</body-content>
    <attribute>
        <name>var</name>
        <required>true</required>
        <rtexprvalue>true</rtexprvalue>
        <type>java.util.List</type>
    </attribute>
    </tag>
    <tag>
        <description>This class is for News Search</description>
        <name>getNewsSearch</name>
        <tag-class>za.co.standardbank.sbg.cda.templating.taglib.PressReleaseSearchTag</tag-class>
        <body-content>empty</body-content>
    <attribute>
        <name>var</name>
        <required>true</required>
        <rtexprvalue>true</rtexprvalue>
        <type>java.util.List</type>
    </attribute>
    </tag>
    <tag>
        <description>This class is for building a friendly url link to configured value for a given vanity url title</description>
        <name>buildFriendlyURL</name>
        <tag-class>za.co.standardbank.sbg.cda.templating.taglib.VanityURLTag</tag-class>
        <body-content>empty</body-content>
    <attribute>
        <name>var</name>
        <required>true</required>
        <rtexprvalue>true</rtexprvalue>
        <type>java.lang.String</type>
    </attribute>
    <attribute>
        <name>format</name>
        <required>false</required>
        <rtexprvalue>true</rtexprvalue>
        <type>java.lang.String</type>
    </attribute>
    <attribute>
        <description>This is where user needs to give vanity url title</description>
        <name>vanityURL</name>
        <required>true</required>
        <rtexprvalue>true</rtexprvalue>
        <type>java.lang.String</type>
    </attribute>
    <attribute>
        <description>This accepts values of "content or channel or externalURL". if no value is given, it assumes channel.</description>
        <name>itemType</name>
        <required>false</required>
        <rtexprvalue>true</rtexprvalue>
        <type>java.lang.String</type>
    </attribute>
    </tag>
    <tag>
        <description>This class is for Accolade Data. Data consists Publication as Key, values are List of Accolade CIs(sorted by titles).</description>
        <name>getAccoladeData</name>
        <tag-class>za.co.standardbank.sbg.cda.templating.taglib.AccoladeDataTag</tag-class>
        <body-content>empty</body-content>
    <attribute>
        <name>var</name>
        <required>true</required>
        <rtexprvalue>true</rtexprvalue>
        <type>java.util.List</type>
    </attribute>
    </tag>
    <tag>
        <description>Given a Content Instance's GUID, retrieves the CTD XML Name for that Content Item and places the CTD XML Name in the specified scope.</description>
        <name>getCtdXmlName</name>
        <tag-class>za.co.standardbank.sbg.cda.templating.taglib.GetCTDXmlNameTag</tag-class>
        <body-content>empty</body-content>
    <attribute>
      <description>The name with which the CTD XML Name will be stored in one of the scopes specified.</description>
      <name>var</name>
      <required>true</required>
      <rtexprvalue>false</rtexprvalue>
    </attribute>
    <attribute>
      <description>The content management id of the Content Item whose CTD XML needs to be retrieved.</description>
      <name>oid</name>
      <required>true</required>
      <rtexprvalue>true</rtexprvalue>
    </attribute>
    <attribute>
      <description>The scope in which the bean must be stored.Default Scope is 'Page'.</description>
      <name>scope</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
    </attribute>
    </tag>

    <tag>
	<description>Populates HTML Meta Tags data namely Keywords,Description and Title</description>
	<name>metaData</name>
	<tag-class>za.co.standardbank.sbg.cda.templating.taglib.MetaDataTag</tag-class>
	<body-content>empty</body-content>
    </tag>

    <tag>
	<description>Retrieves the Attribute value of the given descriptor content item and places the value in given scope.</description>
	<name>descriptorProperty</name>
	<tag-class>za.co.standardbank.sbg.cda.templating.taglib.GetObjectDescriptorPropertyTag</tag-class>
	<body-content>empty</body-content>

	<attribute>
	      <description>Name of the exported scoped variable to hold attribute value.</description>
	      <name>var</name>
	      <required>true</required>
	      <rtexprvalue>false</rtexprvalue>
	</attribute>

	<attribute>
	      <description>Channel GUId value for which Attribute descriptor CI needs to be loaded.</description>
	      <name>channelId</name>
	      <required>true</required>
	      <rtexprvalue>true</rtexprvalue>
	</attribute>

	<attribute>
	      <description>Attribute's XML Name for which value needs to be retrived from Descriptor CI.</description>
	      <name>attributeName</name>
	      <required>true</required>
	      <rtexprvalue>true</rtexprvalue>
	</attribute>

	<attribute>
	      <description>The scope in which the attribute value must be stored.Default Scope is 'page'.</description>
	      <name>scope</name>
	      <required>false</required>
	      <rtexprvalue>true</rtexprvalue>
	</attribute>
    </tag>

    <function>
	<description>
		Tests if an the Collection(List or Set) Object the specified Object.
	</description>
	<name>contains</name>
	<function-class>za.co.standardbank.sbg.cda.templating.taglib.JstlFunctions</function-class>
	<function-signature>boolean contains(java.util.Collection,java.lang.Object)</function-signature>
    </function>
</taglib>